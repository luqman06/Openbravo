<?xml version="1.0"?>
  <database name="FUNCTION ID_TANGGALKMK">
    <function name="ID_TANGGALKMK" type="TIMESTAMP">
      <parameter name="p_curfrom_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_curto_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_convdate" type="TIMESTAMP" mode="in">
        <default/>
      </parameter>
      <parameter name="p_ratetype" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_client_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_org_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Currency From variables
  v_cf_IsEuro      char(1);
  -- Triangle
  v_CurrencyFrom VARCHAR(32);
  v_CurrencyTo   VARCHAR(32);
  v_CurrencyEuro VARCHAR(32);
  --
  v_ConvDate DATE := now();
  v_RateType VARCHAR(60) := 'S';
  v_tanggalkmk timestamp without time zone;

  v_Message VARCHAR2(2000):='';
  v_ClientName VARCHAR2(2000):='';
  v_OrgName VARCHAR2(2000):='';
BEGIN

  -- No Conversion
  IF(p_CurFrom_ID = p_CurTo_ID) THEN
    RETURN null;
  END IF;
  -- Default Parameter
  IF(p_ConvDate IS NOT NULL) THEN
    v_ConvDate := p_ConvDate;
  END IF;
  IF(p_RateType IS NOT NULL) THEN
    v_RateType := p_RateType;
  END IF;
  -- Flexible Rates
  v_CurrencyFrom := p_CurFrom_ID;
  v_CurrencyTo := p_CurTo_ID;
  -- Get Rate
  DECLARE
  TYPE RECORD IS REF CURSOR;
    CUR_Rate RECORD;
  BEGIN
  
    FOR CUR_Rate IN
      (SELECT em_id_tanggalkmk
      FROM C_Conversion_Rate
      WHERE C_Currency_ID = v_CurrencyFrom
        AND C_Currency_ID_To = v_CurrencyTo
        AND ConversionRateType = v_RateType
        AND TRUNC(v_ConvDate) BETWEEN ValidFrom AND ValidTo
        AND AD_Client_ID IN ('0', p_Client_ID)
        AND AD_Org_ID IN ('0', p_Org_ID)
        AND IsActive = 'Y'
      ORDER BY AD_Client_ID DESC,
        AD_Org_ID DESC,
        ValidFrom DESC
      )
    LOOP
      v_tanggalkmk := CUR_Rate.em_id_tanggalkmk;
      EXIT; -- only first
    END LOOP;
  END;
  
  -- Not found
  IF(v_tanggalkmk IS NULL) THEN
    DBMS_OUTPUT.PUT_LINE('v_CurrencyFrom:'||v_CurrencyFrom||'-v_CurrencyTo:'||v_CurrencyTo||'-v_RateType:'||v_RateType||'-v_ConvDate'||v_ConvDate||'-p_Client_ID:'||p_Client_ID||'-p_Org_ID:'||p_Org_ID) ;
    DBMS_OUTPUT.PUT_LINE('Conversion Rate Not Found') ;
    SELECT ad_client.name
    INTO v_ClientName
    FROM ad_client
    WHERE ad_client.ad_client_id = p_Client_ID;
    SELECT ad_org.name
    INTO v_OrgName
    FROM ad_org
    WHERE ad_org.ad_org_id = p_Org_ID;
    IF (v_CurrencyFrom IS NULL OR v_CurrencyTo IS NULL OR v_ConvDate IS NULL OR v_ClientName IS NULL OR v_OrgName IS NULL) THEN
      RETURN NULL;
    ELSE
      v_Message:='@id_notanggalkmk@' || ' ' || C_CURRENCY_ISOSYM(v_CurrencyFrom) || ' '
        || '@to@' || ' ' || C_CURRENCY_ISOSYM(v_CurrencyTo) || ' ' || '@ForDate@' || ' ''' || TO_CHAR(v_ConvDate)
	|| ''', ' || '@Client@' || ' ''' || v_ClientName || ''' ' || '@And@' || ' ' || '@ACCS_AD_ORG_ID_D@' || ' ''' || v_OrgName || '''.';
      RAISE_APPLICATION_ERROR(-20000, v_Message);
    END IF;
  END IF;
  -- Currency From was EMU
  RETURN v_tanggalkmk;
EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE(SQLERRM) ;
  RAISE;
END ID_TANGGALKMK
]]></body>
    </function>
  </database>
