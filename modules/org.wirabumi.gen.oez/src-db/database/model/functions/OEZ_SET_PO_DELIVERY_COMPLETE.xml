<?xml version="1.0"?>
  <database name="FUNCTION OEZ_SET_PO_DELIVERY_COMPLETE">
    <function name="OEZ_SET_PO_DELIVERY_COMPLETE" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* Contributor(s):  AHMAD
* Set Force Delivery Completed untuk Purchase Order
************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_Record_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32):='0';
  v_Org_ID VARCHAR2(32);
  v_Client_ID VARCHAR2(32);
  v_OnhandStock NUMBER;
  v_DocStatus VARCHAR(32);
  v_Processed VARCHAR(2);

  --  Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    Cur_Lines RECORD;
   
  BEGIN
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID, i.ad_client_id, i.AD_User_ID, p.ParameterName, p.P_String, p.P_Number, p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID = p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID = p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID := Cur_Parameter.Record_ID;
      v_User_ID := Cur_Parameter.AD_User_ID;
      v_Client_ID := Cur_Parameter.ad_client_id;
    END LOOP; -- Get Parameter
	
  	select o.DocStatus, o.processed into v_DocStatus, v_Processed from c_order o where o.issotrx='N' and o.c_order_id = v_Record_ID;
   
   	if (v_Processed = 'N') then
   		raise exception '%', 'This function not available for current document';		--Document posted/processed
   	end if;
   
   	if (v_DocStatus <> 'CO') then
   		raise exception '%', 'This function not available for current document status';		--Document posted/processed
   	end if;
	
    for Cur_Lines in(select l.c_orderline_id,
    		l.line,
    		l.m_product_id,
    		l.qtyordered, 
    		GR.gr_qty
    	from c_orderline l
    	left outer join (select il.c_orderline_id, 
    			sum(il.movementqty) as gr_qty
	    		from m_inoutline as il 
	    		inner join m_inout i on il.m_inout_id=i.m_inout_id 
	    			where i.movementtype in('V-','V+') 
	    				and i.docstatus in ('CO')
	    				group by il.c_orderline_id) AS GR on l.c_orderline_id = GR.c_orderline_id 
   	    where l.c_order_id = v_Record_ID
    	order by l.line asc
    ) loop
		
		--TO DO here
		if (Cur_Lines.gr_qty <> Cur_Lines.qtyordered) then
		
			update c_orderline
			set em_oez_requestedqty = Cur_Lines.qtyordered,
				qtyordered = Cur_Lines.gr_qty,
--				QtyDelivered = Cur_Lines.gr_qty,
				em_oez_flagdelivery_completed = 'Y'
				where c_orderline_id = Cur_Lines.c_orderline_id;
			
		end if;
	
	end loop;
	
	--update PO Header
	update c_order
		set isdelivered = 'Y'
		where issotrx = 'N'
			and c_order_id = v_Record_ID;

	v_Result := 1;  --success
	v_Message := 'Force Complete Delivery for this document execute succesfully!';
	
  END; --BODY
  
  IF(p_PInstance_ID IS NOT NULL) THEN
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
  END IF;
 
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE( v_ResultStr);
  ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
--  RETURN;
END OEZ_SET_PO_DELIVERY_COMPLETE
]]></body>
    </function>
  </database>
