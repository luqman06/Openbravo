<?xml version="1.0"?>
  <database name="FUNCTION TA_KALKULASI_POTONG_GAJI">
    <function name="TA_KALKULASI_POTONG_GAJI" type="NULL">
      <parameter name="p_employee_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_effectivedate" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="result" type="NUMERIC" mode="out">
        <default/>
      </parameter>
      <body><![CDATA[declare
v_month NUMBER;
v_year NUMBER;
v_payments NUMBER;
v_akumulasi_pot_gaji varchar(32);
v_bpartner_id varchar(32);
v_startdate timestamp without time zone;
v_enddate timestamp without time zone;
v_date timestamp without time zone;
v_checkin time without time zone;
v_checkout time without time zone;
v_checkinactual timestamp without time zone;
v_checkoutactual timestamp without time zone;
v_late NUMBER;
v_early NUMBER;
v_cuti NUMBER;
v_lateatt NUMBER;
v_totallate NUMBER;
v_late_pot NUMBER;
v_amount NUMBER;
v_type_ct varchar(60);
v_duration_ct NUMBER;
v_usedleave_ct NUMBER;
v_sisacuti_ct NUMBER;
v_type_cbs varchar(60);
v_duration_cbs NUMBER; 
v_usedleave_cbs NUMBER;
v_sisacuti_cbs NUMBER;
v_utangcuti NUMBER;
v_count3 NUMBER;
v_count4 NUMBER;
v_count5 NUMBER;
v_tunjangan NUMBER;
v_duration NUMBER;
v_gaji NUMBER;
v_workday NUMBER;
v_gajitotal NUMBER;
v_gajiharian NUMBER;
v_client_id varchar(32);
v_keterangan varchar(32);
v_employee_id varchar(32);
v_org_id varchar(32);
v_createdby varchar(32);
v_c_bp_shift_id varchar(32);
v_shift_id varchar(32);
v_updatedby varchar(32);
v_hour NUMBER;

--Record
Cur_Header record;
Cur_Late record;
Cur_Early Record;

begin
 result:=0;
 v_totallate:=0;
 --memberikan parameter berupa tahun dan bulan
 if p_effectivedate is null then
   select date_part('year', now()), date_part('month', now()) into v_year, v_month
   from dual;
 else
   v_year:=date_part('year',p_effectivedate);
   v_month:=date_part('month', p_effectivedate);
 end if;


--loop employee
for cur_header in 
	(select distinct spe.c_bpartner_id, spe.pyr_sp_employee_id, sp.name, sp.startdate, sp.enddate,
	sp.ad_client_id, to_char(sp.valutadate, 'month') as valutadate
	from pyr_salarypayment sp
	inner join pyr_sp_employee spe on spe.pyr_salarypayment_id=sp.pyr_salarypayment_id
	left join lv_c_bp_leave bpl on bpl.c_bpartner_id=spe.c_bpartner_id
	where date_part('year',sp.valutadate)=v_year
	and date_part('month',sp.valutadate)=v_month
	and exists (select 1 from pyr_spe_deduction sped inner join pyr_deduction ded on ded.pyr_deduction_id=sped.pyr_deduction_id
	where value='PTLT' and pyr_sp_employee_id=spe.pyr_sp_employee_id)
	and (case when p_employee_id is not null then spe.c_bpartner_id=p_employee_id else 1=1 end))

loop  --loop ta_kalkulasi_potong_gaji
 --mengambil data utang cuti
 select amount::integer into v_utangcuti 
 from pyr_sal_variable
 where ad_client_id=cur_header.ad_client_id
 and value='UC'
 and cur_header.startdate>=validfrom
 and cur_header.enddate<=validto
 order by validfrom desc, validto desc limit 1;
 
 --mengambil data cuti 
 select type, duration, usedleave, (duration-usedleave) 
 into v_type_ct, v_duration_ct, v_usedleave_ct, v_sisacuti_ct
 from lv_c_bp_leave 
 where c_bpartner_id=cur_header.c_bpartner_id
 and type='CT'
 and cur_header.startdate>=validfrom
 and cur_header.enddate<=validto
 order by validfrom desc, validto desc limit 1;

 /*
 raise notice 'v_type_ct: %, v_duration_ct: %, v_usedleave_ct: %, v_utangcuti: %',
 v_type_ct, v_duration_ct, v_usedleave_ct, v_utangcuti;
 */
  
 select type, duration, usedleave, (duration-usedleave) 
 into v_type_cbs, v_duration_cbs, v_usedleave_cbs, v_sisacuti_cbs
 from lv_c_bp_leave 
 where c_bpartner_id=cur_header.c_bpartner_id
 and type='CBS'
 and cur_header.startdate>=validfrom
 and cur_header.enddate<=validto
 order by validfrom desc, validto desc limit 1;
 /*
 raise notice 'v_type_cbs: %, v_duration_cbs: %, v_usedleave_cbs: %, v_sisacuti_cbs: %',
 v_type_cbs, v_duration_cbs, v_usedleave_cbs, v_sisacuti_cbs;
 */
 --validasi cuti
 If (v_utangcuti+v_sisacuti_ct)>0 or  (v_sisacuti_cbs is not null) then continue;
 Else
    v_cuti:=v_sisacuti_ct;
 end if;
 /*
 raise notice 'employee: %, v_cuti: %, v_utangcuti: %, v_sisacuti_ct: %', 
 (select name from c_bpartner where c_bpartner_id=cur_header.c_bpartner_id), v_cuti,
 v_utangcuti, v_sisacuti_ct;
 */
 --mengambil data pada window employee
 select ad_client_id, ad_org_id, createdby, updatedby
 into v_client_id, v_org_id, v_createdby, v_updatedby
 from c_bpartner
 where c_bpartner_id=cur_header.c_bpartner_id;

 --mengambil shift
 select ta_c_bp_shift_id into v_c_bp_shift_id from ta_c_bp_shift 
 where c_bpartner_id=cur_header.c_bpartner_id;

 IF v_c_bp_shift_id is null then continue; end if;
 
 --mengambil jumlah hari kerja
 select count(*) into v_workday
 from ta_indv_attendanceperformance(cur_header.c_bpartner_id, cur_header.startdate, cur_header.enddate);

 --menghitung Gaji
 --gaji pokok
 select spee.amount into v_gaji
 from pyr_spe_earning spee
 inner join pyr_earning pre on pre.pyr_earning_id=spee.pyr_earning_id
 where value='GP'
 and pyr_sp_employee_id=cur_header.pyr_sp_employee_id;

 --tunjangan pokok
 select spee.amount into v_tunjangan
 from pyr_spe_earning spee
 inner join pyr_earning pre on pre.pyr_earning_id=spee.pyr_earning_id
 where value='TP'
 and pyr_sp_employee_id=cur_header.pyr_sp_employee_id;

 --menjumlahkan gaji total
 v_gajitotal:=round(v_gaji+v_tunjangan, 2);

 --menghitung gaji pokok
 v_gajiharian:=round((v_gajitotal/v_workday), 2);
   
 
  --mengambil data akumulasi potongan cuti yang sudah complete
 select ta_akumulasi_pot_gaji_id, c_bpartner_id, startdate, enddate
 into v_akumulasi_pot_gaji, v_bpartner_id, v_startdate, v_enddate
 from ta_akumulasi_pot_gaji
 where c_bpartner_id=cur_header.c_bpartner_id
 and docstatus='CO'
 order by startdate desc, enddate desc;

 IF v_akumulasi_pot_gaji is not null and v_bpartner_id is not null then continue; end if;
 
 --mengambil data akumulasi potongan gaji yang sudah ada
 select ta_akumulasi_pot_gaji_id, c_bpartner_id, startdate, enddate
 into v_akumulasi_pot_gaji, v_bpartner_id, v_startdate, v_enddate
 from ta_akumulasi_pot_gaji
 where c_bpartner_id=cur_header.c_bpartner_id
 and cur_header.startdate>=startdate
 and cur_header.enddate<=enddate
 and docstatus='DR'
 order by startdate desc, enddate desc;

 --validasi potongan gaji
 IF v_bpartner_id=cur_header.c_bpartner_id and v_startdate=cur_header.startdate and v_enddate=cur_header.enddate then 
 update ta_akumulasi_pot_gaji set Monthday=v_totallate
 where c_bpartner_id=cur_header.c_bpartner_id
 and startdate=cur_header.startdate 
 and enddate=cur_header.enddate;
 Else
 select get_uuid() into v_akumulasi_pot_gaji from dual;
 INSERT INTO ta_akumulasi_pot_gaji(
            ta_akumulasi_pot_gaji_id, ad_client_id, ad_org_id, isactive, 
            created, createdby, updated, updatedby, amount, c_bpartner_id, 
            description, docstatus, docaction, Monthday, startdate, enddate, 
            "name")
 VALUES (v_akumulasi_pot_gaji, v_client_id, v_org_id, 'Y', 
            now(), v_createdby, now(), v_updatedby, 0, cur_header.c_bpartner_id,
            null, 'DR', 'CO', v_totallate, cur_header.startdate, cur_header.enddate,
            'Potong Cuti Bulan'||' '||cur_header.valutadate); 
 end if;

 --mendapatkan data untuk detail potongan gaji
    --Terlambat
    FOR Cur_Late in (select t_date as DATE, employee_id, checkinactual, keterangan, checkoutactual, late, checkin, checkout 
	from ta_indv_attendanceperformance 
	(cur_header.c_bpartner_id, cur_header.startdate, cur_header.enddate))
    Loop --loop detail potongan gaji
	--mengambil data checkin yang paling awal
	select checkin, (date_part('hour', late)*60 + date_part('minute', late))
	into v_checkinactual, v_lateatt
	from ta_attendance
	where c_bpartner_id=Cur_Late.employee_id
	and checkin::date=Cur_Late.date 
	order by checkin asc limit 1;

	--mengambil data cuti
	select ta_shift_id into v_shift_id
        from ta_c_bp_shift 
        where c_bpartner_id=cur_header.c_bpartner_id
        and v_startdate>=validfrom
        and v_enddate<=validto;

        if v_shift_id is null then continue; end if;
        
        --mengambil data durasi dalam 1 hari kerja dalam menit
	select (extract(hour from checkout)*60 + extract(minute from checkout))-(extract(hour from checkin)*60 + extract(minute from checkin)), (extract(hour from checkout)-extract(hour from checkin)) 
	into v_late, v_hour 
	from ta_shiftline sl
	where sl.ta_shift_id=v_shift_id and line=1;

	--cek apakah cuti
	select count(*) into v_count3 from lv_leave
		where c_bpartner_id=cur_header.c_bpartner_id
		and datefrom=Cur_Late.date
		and docstatus='CO';

        
	--cek apakah perjalanan dinas
	select count(*) into v_count4 from bt_businesstrip
		where c_bpartner_id=cur_header.c_bpartner_id
		and datefrom=Cur_Late.date
		and docstatus='CO';
        
	--cek apakah izin tidak masuk
	select count(*) into v_count5 from lv_tidakmasuk
		where c_bpartner_id=cur_header.c_bpartner_id
		and datefrom=Cur_Late.date
		and docstatus='CO';

	--memberikan Keterangan
	IF v_count3=1 then v_late:=0;
	ELSIF v_count4=1 then v_late:=0;
	ELSIF v_count5=1 then v_late:=0;
	ELSE  v_late:=v_late;
	End If;

	--validasi untuk late
	IF v_checkinactual is null and v_checkoutactual is null then
	   v_late:=v_late;
	Else
	   v_late:=v_lateatt;
	End If;

	if v_late<=0 then continue; end if; 

	--memberikan keterangan untuk detail
	IF v_checkinactual is null and Cur_Late.keterangan is null then
	   v_keterangan:='Tidak Masuk';
	elsif v_checkinactual is not null and Cur_Late.keterangan is null then
	   v_keterangan:='Telat'||' '||v_lateatt||' '|| ' Menit';
	else
	   v_keterangan:=Cur_Late.keterangan;
	End If;
		
	
	--mengambil data yang sudah diinsert
	select DATE, c_bpartner_id into v_date, v_employee_id
	from ta_detail_pot_gaji
	where c_bpartner_id=cur_header.c_bpartner_id
	and ta_akumulasi_pot_gaji_id=v_akumulasi_pot_gaji
	and date=Cur_Late.date
	and Dayminutes=v_late;

	raise notice 'v_akumulasi_pot_gaji: %, v_late: %, v_keterangan: %', 
	v_akumulasi_pot_gaji, v_late, v_keterangan;

	--validasi untuk date yang sudah diinsert
	IF v_date=Cur_Late.date and v_employee_id=Cur_Late.employee_id then 
		update ta_detail_pot_gaji set Dayminutes=v_late, description=v_keterangan, 
		c_bpartner_id=Cur_Late.employee_id, date=Cur_Late.date
		where c_bpartner_id=Cur_Late.employee_id
		and date=Cur_Late.date
		and Dayminutes=v_late;
	Else
	INSERT INTO ta_detail_pot_gaji(
            ta_detail_pot_gaji_id, ad_client_id, ad_org_id, isactive, created, 
            createdby, updated, updatedby, c_bpartner_id, DATE, Dayminutes, ta_akumulasi_pot_gaji_id, description)
	VALUES (get_uuid(), v_client_id, v_org_id, 'Y', now(), 
		v_createdby, now(), v_updatedby, cur_header.c_bpartner_id, Cur_Late.date, v_late, v_akumulasi_pot_gaji, v_keterangan);
	End If;
	
    End Loop; --loop detail potongan gaji

    --mendapatkan data untuk detail potongan gaji
    --pulang lebih awal
    FOR Cur_Early in (select t_date as DATE, employee_id, checkinactual, keterangan, checkoutactual, late, checkin, checkout 
	from ta_indv_attendanceperformance 
	(cur_header.c_bpartner_id, cur_header.startdate, cur_header.enddate))
    Loop --loop detail potongan gaji
	--mengambil data checkout yang paling Akhir
	select checkout, (date_part('hour', early)*60 + date_part('minute', early)) 
	into v_checkoutactual, v_early
	from ta_attendance
	where c_bpartner_id=Cur_Early.employee_id
	and checkin::date=Cur_Early.date
	and (case when Cur_Early.checkout is not null then checkin::time<=Cur_Early.checkout::time else 1=1 end)
	order by checkout desc limit 1;
	
	--mengambil data cuti
	select ta_shift_id into v_shift_id
        from ta_c_bp_shift 
        where c_bpartner_id=cur_header.c_bpartner_id
        and v_startdate>=validfrom
        and v_enddate<=validto;

        if v_shift_id is null then continue; end if;

        --validasi untuk Early
	IF v_checkoutactual is not null then
	   v_early:=v_early; 
	End If;

	if v_early is null or v_early<=0 then continue; end if;
	
	--memberikan keterangan untuk detail
	IF v_checkoutactual is not null and cur_early.keterangan is null then
	   v_keterangan:='Pulang Awal'||' '||v_early||' '|| ' Menit';
	else
	   v_keterangan:=cur_early.keterangan;
	End If;

	--mengambil data yang sudah diinsert
	select DATE, c_bpartner_id into v_date, v_employee_id
	from ta_detail_pot_gaji
	where c_bpartner_id=cur_header.c_bpartner_id
	and ta_akumulasi_pot_gaji_id=v_akumulasi_pot_gaji
	and date=Cur_Early.date
	and Dayminutes=v_early;

	raise notice 'v_akumulasi_pot_gaji: %, v_early: %, v_keterangan: %', 
	v_akumulasi_pot_gaji, v_early, v_keterangan;
	
	--validasi untuk date yang sudah diinsert
	IF v_date=Cur_Early.date and v_employee_id=Cur_Early.employee_id then 
		update ta_detail_pot_gaji set Dayminutes=v_early, description=v_keterangan, c_bpartner_id=Cur_Early.employee_id, date=Cur_Early.date
		where c_bpartner_id=Cur_Early.employee_id
		and date=Cur_Early.date
		and Dayminutes=v_early;
	Else
		INSERT INTO ta_detail_pot_gaji(
		ta_detail_pot_gaji_id, ad_client_id, ad_org_id, isactive, created, 
		createdby, updated, updatedby, c_bpartner_id, DATE, Dayminutes, ta_akumulasi_pot_gaji_id, description)
		VALUES (get_uuid(), v_client_id, v_org_id, 'Y', now(), 
		v_createdby, now(), v_updatedby, cur_header.c_bpartner_id, Cur_Early.date, v_early, v_akumulasi_pot_gaji, v_keterangan);
	End If;
	
    End Loop; --loop detail potongan gaji
    
    

--mendapatkan late dari tab detail kalkulasi         
select (sum(det.Dayminutes)/60) into v_totallate 
from ta_akumulasi_pot_gaji pot 
inner join ta_detail_pot_gaji det on det.ta_akumulasi_pot_gaji_id=pot.ta_akumulasi_pot_gaji_id
where pot.c_bpartner_id=cur_header.c_bpartner_id
and cur_header.startdate=startdate
and cur_header.enddate=enddate;

v_amount:=(v_gajiharian/v_hour)*v_totallate;

IF v_amount is null then v_amount:=0;
Else v_amount:=(v_gajiharian/v_hour)*v_totallate;
End If;

If v_amount >= v_gajitotal then v_amount:=v_gajitotal;
Else v_amount:=v_amount;
End If;
    
update ta_akumulasi_pot_gaji set Dayhours=v_totallate, Monthday=v_totallate/v_hour, amount=v_amount
where c_bpartner_id=cur_header.c_bpartner_id
and startdate=cur_header.startdate 
and enddate=cur_header.enddate;  

end loop; --loop ta_kalkulasi_potong_gaji


result:=1;

return;
end
]]></body>
    </function>
  </database>
