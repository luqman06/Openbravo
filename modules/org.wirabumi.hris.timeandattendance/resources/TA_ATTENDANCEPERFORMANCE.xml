<?xml version="1.0"?>
  <database name="FUNCTION TA_ATTENDANCEPERFORMANCE">
    <function name="TA_ATTENDANCEPERFORMANCE" type="VARCHAR">
      <parameter name="p_employee_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_startdate" type="TIMESTAMP" mode="in">
        <default/>
      </parameter>
      <parameter name="p_enddate" type="TIMESTAMP" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
  v_ResultStr varchar(2000);
  v_currentdate timestamp without time zone;
  v_enddate timestamp without time zone;
  v_checkin timestamp without time zone;
  v_checkout timestamp without time zone;
  v_checkinactual timestamp without time zone;
  v_checkoutactual timestamp without time zone;
  v_duration varchar(2000);
  v_keterangan varchar(32);
  r ta_attendanceperformance%rowtype;
  v_day NUMBER;
  v_count NUMBER;
  v_count2 NUMBER;
  v_count3 NUMBER;
  v_count4 NUMBER;
  v_count5 NUMBER;
  v_shift_id varchar(32);
  v_shiftline_id varchar(32);
  v_shifttmp_id varchar(32);
  v_shiftline bigint;
  v_cuti timestamp without time zone;

  --  Parameter
  TYPE RECORD IS REF CURSOR;
  cur_employee record;
  v_checkinstatus character varying(32); 
  v_checkoutstatus character varying(32);

  BEGIN
 BEGIN --BODY
   

   For cur_employee in (select c_bpartner_id, ad_client_id, em_hris_joindate from c_bpartner 
   where (case when p_employee_id is not null then c_bpartner_id=p_employee_id else 1=1 end))

   Loop

   if cur_employee.em_hris_joindate  is null then continue; end if;

   if p_startdate is null then
     v_currentdate:=cur_employee.em_hris_joindate;
   end if;

   if p_enddate is null then
     v_enddate:=now();
   else
     v_enddate:=p_enddate;
   end if;

   v_shifttmp_id := '';
   while v_currentdate<=v_enddate 
   loop --loop date
   --cari apakah harus absen
     --konversi dari tanggal ke hari
     select ta_shift_id into v_shift_id
     from ta_c_bp_shift 
     where c_bpartner_id=p_employee_id
     and v_currentdate=validfrom;
     
     if (v_shifttmp_id <> v_shift_id ) then 
	v_shifttmp_id := v_shift_id;
     end if;

     --mendapatkan shift
     select (v_currentdate::date-s.validfrom::date)%(select count(*) from ta_shiftline where ta_shift_id=s.ta_shift_id) 
        into v_shiftline
	from ta_shift s where ta_shift_id=v_shifttmp_id;
     select ta_shiftline_id, count(*) into v_shiftline_id, v_count
        from ta_shiftline where ta_shift_id=v_shifttmp_id and line=v_shiftline and isoff='N'
        group by ta_shiftline_id;

     --cek apakah hari libur
    select count(*) into v_count2 from C_NonBusinessDay
               where ad_client_id=ad_client_id and date1::date=v_currentdate;

    if v_count2=1 then v_count=0; end if;
 
    --cek apakah cuti
    select count(*) into v_count3 from lv_leave
		where c_bpartner_id=p_employee_id
		and datefrom=v_currentdate
		and docstatus='CO';


    
   --cek apakah perjalanan dinas
    select count(*) into v_count4 from bt_businesstrip
		where c_bpartner_id=p_employee_id
		and datefrom=v_currentdate
		and docstatus='CO';

    --cek apakah izin tidak masuk
    select count(*) into v_count5 from lv_tidakmasuk
		where c_bpartner_id=p_employee_id
		and datefrom=v_currentdate
		and docstatus='CO';

		
   --memberikan Keterangan
   IF v_count3=1 then v_keterangan:='Cuti';
   ELSIF v_count4=1 then v_keterangan:='Perjalanan Dinas';
   ELSIF v_count5=1 then v_keterangan:='Izin Tidak Masuk';
   ELSE  v_keterangan:=null;
   End If;
   

   --cek apakah harus absen
   if (v_count>0) then --if untuk apakah harus absen

        --cari data absensi
        select att.checkin, sl.checkin, att.checkin_status,  att.duration, att.checkout, sl.checkout, att.checkout_status, sl.ta_shift_id
        into v_checkinactual, v_checkin, v_checkinstatus, v_duration, v_checkoutactual, v_checkout, v_checkoutstatus, v_shift_id
        from ta_attendance att, ta_shiftline sl
        where att.c_bpartner_id=p_employee_id
        and att.checkin::date=v_currentdate::date
        and sl.ta_shiftline_id=v_shiftline_id
        limit 1;

        raise notice 'v_checkinactual: %, v_checkin: %, v_checkinstatus: %, v_late: %, v_duration: %, v_checkoutactual: %, 
        v_checkout: %, v_checkoutstatus: %, v_shift_id: %',
        v_checkinactual, v_checkin, v_checkinstatus, v_late, v_duration, v_checkoutactual, v_checkout, v_checkoutstatus, v_shift_id;

       
         --return per record menggunakan return next
         r.t_date:=v_currentdate;
         r.employee_id:=p_employee_id;
         r.checkin:=v_checkin;
         r.checkinactual:=v_checkinactual;
         r.checkinstatus:=v_checkinstatus;
         r.checkout:=v_checkout;
         r.checkoutactual:=v_checkoutactual;
         r.checkoutstatus:=v_checkoutstatus;
         r.duration:=v_duration;
         r.keterangan:=v_keterangan;
         return next r;
         
     end if; --end if untuk apakah harus absen
     v_currentdate:=v_currentdate+'1 Day'::interval;

    end loop; --end loop date

   End Loop; --end loop Employee

    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
END TA_ATTENDANCEPERFORMANCE
]]></body>
    </function>
  </database>
