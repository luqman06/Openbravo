<?xml version="1.0"?>
  <database name="FUNCTION LV_TIDAKMASUK_POST">
    <function name="LV_TIDAKMASUK_POST" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
  * The contents of this file are subject to the Compiere Public
  * License 1.1 ("License"); You may not use this file except in
  * compliance with the License. You may obtain a copy of the License in
  * the legal folder of your Openbravo installation.
  * Software distributed under the License is distributed on an
  * "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  * implied. See the License for the specific language governing rights
  * and limitations under the License.
  * The Original Code is  Compiere  ERP &  Business Solution
  * The Initial Developer of the Original Code is Jorg Janke and ComPiere, Inc.
  * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke,
  * parts created by ComPiere are Copyright (C) ComPiere, Inc.;
  * All Rights Reserved.
  * Contributor(s): Openbravo SLU
  * Contributions are Copyright (C) 2001-2008 Openbravo, S.L.U.
  *
  * Specifically, this derivative work is based upon the following Compiere
  * file and version.
  *************************************************************************
  * $Id: lv_tidakmasuk_post.sql,v 1.2 2002/10/21 04:49:46 jjanke Exp $
  ***
  * Title:  Post single Invoice
  *************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_Record_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32):='0';
  v_DocAction VARCHAR2(60);
  v_DocStatus VARCHAR2(60);
  v_duration NUMBER;
  v_Aux NUMBER;
  v_usedtidakmasuk NUMBER;
  v_bpartner_id varchar(32);
  v_datefrom timestamp without time zone;
  v_dateto timestamp without time zone;

  --  Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    Cur_RequisitionLine RECORD;
BEGIN
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
  v_ResultStr:='PInstanceNotFound';
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;

  BEGIN --BODY
   IF (p_PInstance_ID IS NOT NULL) THEN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        i.AD_User_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date
      FROM AD_PINSTANCE i
      LEFT JOIN AD_PINSTANCE_PARA p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_User_ID:=Cur_Parameter.AD_User_ID;
    END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  v_Record_ID=' || v_Record_ID) ;
  ELSE
    DBMS_OUTPUT.PUT_LINE('--<<ot_overtime_post>>') ;
    v_Record_ID:=p_tidakmasuk_id;
  END IF;


 
    SELECT DocAction, DocStatus, duration, c_bpartner_id, datefrom, dateto 
    INTO v_DocAction, v_DocStatus, v_duration, v_bpartner_id, v_datefrom, v_dateto
    FROM lv_tidakmasuk
    WHERE lv_tidakmasuk_ID = v_Record_ID;

    v_ResultStr := 'lv_tidakmasuk ' || v_Record_ID || ', DocAction=' || v_DocAction || ', DocStatus=' || v_DocStatus;

    /**
    * Order Closed, Voided or Reversed - No action possible
    */
    IF(v_DocStatus IN('CL', 'VO', 'RE')) THEN
      RAISE_APPLICATION_ERROR(-20000, '@AlreadyPosted@') ;
    ELSIF (v_DocStatus = 'DR') THEN
      IF (v_DocAction = 'CO') THEN
        v_ResultStr := 'Complete the tidakmasuk: ' || v_Record_ID;
        UPDATE lv_tidakmasuk
        SET DocStatus = 'CO',
            DocAction = 'CL',
            Updated=now(),
            UpdatedBy=v_User_ID
        WHERE lv_tidakmasuk_ID = v_Record_ID;
      ELSE
        RAISE_APPLICATION_ERROR(-20000, '@ActionNotAllowedHere@');
      END IF;
    ELSIF (v_DocStatus = 'CO') THEN 
      IF (v_DocAction = 'RE' ) THEN
        v_ResultStr := 'Reactivate the tidak masuk: ' || v_Record_ID;
        UPDATE lv_tidakmasuk
        SET DocStatus = 'DR',
            DocAction = 'CO',
            Updated=now(),
            UpdatedBy=v_User_ID
        WHERE lv_tidakmasuk_ID = v_Record_ID;
      ELSIF (v_DocAction = 'CL' ) THEN
        v_ResultStr := 'Close the tidak masuk: ' || v_Record_ID;
        UPDATE lv_tidakmasuk
        SET DocStatus = 'CL',
            DocAction = 'VO',
            Updated=now(),
            UpdatedBy=v_User_ID
        WHERE lv_tidakmasuk_ID = v_Record_ID;
      ELSE
        RAISE_APPLICATION_ERROR(-20000, '@ActionNotAllowedHere@');
      END IF;

    END IF;
  END; --BODY
  
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('lv_tidakmasuk_Post error: ' || v_ResultStr);
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr);
END LV_TIDAKMASUK_POST
]]></body>
    </function>
  </database>
