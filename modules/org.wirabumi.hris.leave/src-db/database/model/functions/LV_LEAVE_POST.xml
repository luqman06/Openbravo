<?xml version="1.0"?>
  <database name="FUNCTION LV_LEAVE_POST">
    <function name="LV_LEAVE_POST" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_leave_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2006 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_Record_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32):='0';
  v_DocAction VARCHAR2(60);
  v_DocStatus VARCHAR2(60);
  v_duration NUMBER;
  v_Aux NUMBER;
  v_usedleave NUMBER;
  v_bpartner_id varchar(32);
  v_type varchar(60);
  v_datefrom timestamp without time zone;
  v_dateto timestamp without time zone;

  --  Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    Cur_RequisitionLine RECORD;
BEGIN
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
  v_ResultStr:='PInstanceNotFound';
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;

  BEGIN --BODY
   IF (p_PInstance_ID IS NOT NULL) THEN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        i.AD_User_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date
      FROM AD_PINSTANCE i
      LEFT JOIN AD_PINSTANCE_PARA p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_User_ID:=Cur_Parameter.AD_User_ID;
    END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  v_Record_ID=' || v_Record_ID) ;
  ELSE
    DBMS_OUTPUT.PUT_LINE('--<<lv_leave_Post>>') ;
    v_Record_ID:=p_leave_id;
  END IF;


 
    SELECT DocAction, DocStatus, duration, c_bpartner_id, type, datefrom, dateto 
    INTO v_DocAction, v_DocStatus, v_duration, v_bpartner_id, v_type, v_datefrom, v_dateto
    FROM lv_leave
    WHERE lv_leave_ID = v_Record_ID;

    v_ResultStr := 'lv_leave ' || v_Record_ID || ', DocAction=' || v_DocAction || ', DocStatus=' || v_DocStatus;


    select usedleave into v_usedleave
    from lv_c_bp_leave
    where lv_c_bp_leave_id=v_type
    and validfrom<=v_datefrom
    and validto>=v_dateto
    and c_bpartner_id=v_bpartner_id;

	/*
    raise exception 'v_DocAction: %, v_DocStatus: %, v_duration: %, v_bpartner_id: %, v_type: %, v_datefrom: %, v_dateto: %', 
    v_DocAction, v_DocStatus, v_duration, v_bpartner_id, v_type, v_datefrom, v_dateto;
	*/


    /**
    * Order Closed, Voided or Reversed - No action possible
    */
    IF(v_DocStatus IN('CL', 'VO', 'RE')) THEN
      RAISE_APPLICATION_ERROR(-20000, '@AlreadyPosted@') ;
    ELSIF (v_DocStatus = 'DR') THEN
      IF (v_DocAction = 'CO') THEN
        v_ResultStr := 'Complete the Leave: ' || v_Record_ID;
        UPDATE LV_LEAVE
        SET DocStatus = 'CO',
            DocAction = 'CL',
            Updated=now(),
            UpdatedBy=v_User_ID
        WHERE LV_LEAVE_ID = v_Record_ID;
        
        Update lv_c_bp_leave set usedleave=(v_usedleave+v_duration)
        where c_bpartner_id=v_bpartner_id
        and lv_c_bp_leave_id=v_type
        and validfrom<=v_datefrom
        and validto>=v_dateto;
      ELSE
        RAISE_APPLICATION_ERROR(-20000, '@ActionNotAllowedHere@');
      END IF;
    ELSIF (v_DocStatus = 'CO') THEN 
      IF (v_DocAction = 'RE' ) THEN
        v_ResultStr := 'Reactivate the Leave: ' || v_Record_ID;
        UPDATE LV_LEAVE
        SET DocStatus = 'DR',
            DocAction = 'CO',
            Updated=now(),
            UpdatedBy=v_User_ID
        WHERE LV_LEAVE_ID = v_Record_ID;
        
        Update lv_c_bp_leave set usedleave=(v_usedleave-v_duration)
        where c_bpartner_id=v_bpartner_id
        and lv_c_bp_leave_id=v_type
        and validfrom<=v_datefrom
        and validto>=v_dateto;
      ELSIF (v_DocAction = 'CL' ) THEN
        v_ResultStr := 'Close the Leave: ' || v_Record_ID;
        UPDATE LV_LEAVE
        SET DocStatus = 'CL',
            DocAction = 'VO',
            Updated=now(),
            UpdatedBy=v_User_ID
        WHERE LV_LEAVE_ID = v_Record_ID;
      ELSE
        RAISE_APPLICATION_ERROR(-20000, '@ActionNotAllowedHere@');
      END IF;

/*
    ELSIF (v_DocAction = 'CO') THEN
	UPDATE lv_leave
        SET DocStatus = 'CO',
            DocAction = 'CL',
            Updated=now(),
            UpdatedBy=v_User_ID
        WHERE lv_leave_ID = v_Record_ID;

    ELSIF (v_DocAction = 'CL') THEN
        UPDATE lv_leave
        SET DocStatus = 'DR',
            DocAction = 'CO',
            Updated=now(),
            UpdatedBy=v_User_ID
        WHERE lv_leave_ID = v_Record_ID;
*/        
    END IF;
  END; --BODY
  
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('lv_leave_Post error: ' || v_ResultStr);
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr);
END LV_LEAVE_POST
]]></body>
    </function>
  </database>
